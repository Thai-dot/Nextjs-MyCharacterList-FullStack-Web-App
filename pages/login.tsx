import Avatar from '@mui/material/Avatar';
import Button from '@mui/material/Button';
import CssBaseline from '@mui/material/CssBaseline';
import TextField from '@mui/material/TextField';
import FormControlLabel from '@mui/material/FormControlLabel';
import Checkbox from '@mui/material/Checkbox';
import Link from '@mui/material/Link';
import Grid from '@mui/material/Grid';
import Box from '@mui/material/Box';
import LockOutlinedIcon from '@mui/icons-material/LockOutlined';
import Typography from '@mui/material/Typography';
import Container from '@mui/material/Container';
import { createTheme, ThemeProvider } from '@mui/material/styles';
import { validateEmail } from '../utils/validation';
import Head from 'next/head';
import * as React from 'react';
import Router from 'next/router';
import { useDispatch } from 'react-redux';
import { getAuthUser } from '../redux/authSlice';

function Copyright(props: any) {
  return (
    <Typography
      variant="body2"
      color="text.secondary"
      align="center"
      {...props}
    >
      {'Copyright Â© '}
      <Link color="inherit" href="/">
        My Character List
      </Link>{' '}
      {new Date().getFullYear()}
      {'.'}
    </Typography>
  );
}

const theme = createTheme();

export default function SignIn() {
  const [email, setEmail] = React.useState<string>('');
  const [password, setPassword] = React.useState<string>('');
  const dispatch = useDispatch();

  async function postData(url = '', data = {}) {
    console.log('fetching...');
    const response = await fetch(url, {
      method: 'POST',
      body: JSON.stringify(data),
      headers: {
        'Content-Type': 'application/json',
      },
    });

    const receiveData = await response.json();

    if (response.ok) {
      Router.push('/character');
    }
    return receiveData;
  }

  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    const data = new FormData(event.currentTarget);
    const bodyData = {
      email: data.get('email'),
      password: data.get('password'),
    };

    const result = await postData(
      'http://localhost:3000/api/auth/login',
      bodyData
    );

    localStorage.setItem('firstLogin', 'true');
    dispatch(getAuthUser(result.message));
  };

  const handleOnChange = (event: React.FormEvent) => {
    const castEvent = event.target as HTMLInputElement;
    if (castEvent.name === 'email') {
      setEmail(castEvent.value);
      console.log('email');
    }
    if (castEvent.name === 'password') {
      setPassword(castEvent.value);
      console.log('pass');
    }
  };

  return (
    <ThemeProvider theme={theme}>
      <Head>
        <title>Login Page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container component="main" maxWidth="xs">
        <CssBaseline />
        <Box
          sx={{
            marginTop: 8,
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
          }}
        >
          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>
            <LockOutlinedIcon />
          </Avatar>
          <Typography component="h1" variant="h5">
            Sign in
          </Typography>
          <Box
            component="form"
            onSubmit={handleSubmit}
            noValidate
            sx={{ mt: 2 }}
          >
            <TextField
              error={email === '' ? false : validateEmail(email) ? false : true}
              margin="normal"
              required
              fullWidth
              id="email"
              label="Email Address"
              name="email"
              helperText={
                email === ''
                  ? false
                  : validateEmail(email)
                  ? ''
                  : 'Incorrect email format'
              }
              autoComplete="email"
              autoFocus
              onChange={(e) => handleOnChange(e)}
            />
            <TextField
              margin="normal"
              required
              fullWidth
              name="password"
              label="Password"
              type="password"
              id="password"
              autoComplete="current-password"
              onChange={(e) => handleOnChange(e)}
            />
            <FormControlLabel
              control={<Checkbox value="remember" color="primary" />}
              label="Remember me"
            />
            <Button
              type="submit"
              fullWidth
              variant="contained"
              sx={{ mt: 3, mb: 2 }}
            >
              Sign In
            </Button>
            <Grid container>
              <Grid item xs>
                <Link href="#" variant="body2">
                  Forgot password?
                </Link>
              </Grid>
              <Grid item>
                <Link href="/signup" variant="body2">
                  {"Don't have an account? Sign Up"}
                </Link>
              </Grid>
            </Grid>
          </Box>
        </Box>
        <Copyright sx={{ mt: 8, mb: 4 }} />
      </Container>
    </ThemeProvider>
  );
}
